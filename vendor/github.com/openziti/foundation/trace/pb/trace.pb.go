// Code generated by protoc-gen-go. DO NOT EDIT.
// source: trace.proto

package trace_pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MessageType int32

const (
	MessageType_ChannelStateType   MessageType = 0
	MessageType_ChannelMessageType MessageType = 1
)

var MessageType_name = map[int32]string{
	0: "ChannelStateType",
	1: "ChannelMessageType",
}
var MessageType_value = map[string]int32{
	"ChannelStateType":   0,
	"ChannelMessageType": 1,
}

func (x MessageType) String() string {
	return proto.EnumName(MessageType_name, int32(x))
}
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_trace_4b7bed56b6035167, []int{0}
}

type TraceToggleVerbosity int32

const (
	TraceToggleVerbosity_ReportNone    TraceToggleVerbosity = 0
	TraceToggleVerbosity_ReportMatches TraceToggleVerbosity = 1
	TraceToggleVerbosity_ReportMisses  TraceToggleVerbosity = 2
	TraceToggleVerbosity_ReportAll     TraceToggleVerbosity = 3
)

var TraceToggleVerbosity_name = map[int32]string{
	0: "ReportNone",
	1: "ReportMatches",
	2: "ReportMisses",
	3: "ReportAll",
}
var TraceToggleVerbosity_value = map[string]int32{
	"ReportNone":    0,
	"ReportMatches": 1,
	"ReportMisses":  2,
	"ReportAll":     3,
}

func (x TraceToggleVerbosity) String() string {
	return proto.EnumName(TraceToggleVerbosity_name, int32(x))
}
func (TraceToggleVerbosity) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_trace_4b7bed56b6035167, []int{1}
}

type ChannelState struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Identity             string   `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`
	Channel              string   `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	Connected            bool     `protobuf:"varint,4,opt,name=connected,proto3" json:"connected,omitempty"`
	RemoteAddress        string   `protobuf:"bytes,5,opt,name=remoteAddress,proto3" json:"remoteAddress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelState) Reset()         { *m = ChannelState{} }
func (m *ChannelState) String() string { return proto.CompactTextString(m) }
func (*ChannelState) ProtoMessage()    {}
func (*ChannelState) Descriptor() ([]byte, []int) {
	return fileDescriptor_trace_4b7bed56b6035167, []int{0}
}
func (m *ChannelState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelState.Unmarshal(m, b)
}
func (m *ChannelState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelState.Marshal(b, m, deterministic)
}
func (dst *ChannelState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelState.Merge(dst, src)
}
func (m *ChannelState) XXX_Size() int {
	return xxx_messageInfo_ChannelState.Size(m)
}
func (m *ChannelState) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelState.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelState proto.InternalMessageInfo

func (m *ChannelState) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *ChannelState) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *ChannelState) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *ChannelState) GetConnected() bool {
	if m != nil {
		return m.Connected
	}
	return false
}

func (m *ChannelState) GetRemoteAddress() string {
	if m != nil {
		return m.RemoteAddress
	}
	return ""
}

type ChannelMessage struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Identity             string   `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`
	Channel              string   `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel,omitempty"`
	IsRx                 bool     `protobuf:"varint,4,opt,name=isRx,proto3" json:"isRx,omitempty"`
	ContentType          int32    `protobuf:"varint,5,opt,name=contentType,proto3" json:"contentType,omitempty"`
	Sequence             int32    `protobuf:"varint,6,opt,name=sequence,proto3" json:"sequence,omitempty"`
	ReplyFor             int32    `protobuf:"varint,7,opt,name=replyFor,proto3" json:"replyFor,omitempty"`
	Length               int32    `protobuf:"varint,8,opt,name=length,proto3" json:"length,omitempty"`
	Decode               []byte   `protobuf:"bytes,9,opt,name=decode,proto3" json:"decode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelMessage) Reset()         { *m = ChannelMessage{} }
func (m *ChannelMessage) String() string { return proto.CompactTextString(m) }
func (*ChannelMessage) ProtoMessage()    {}
func (*ChannelMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_trace_4b7bed56b6035167, []int{1}
}
func (m *ChannelMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelMessage.Unmarshal(m, b)
}
func (m *ChannelMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelMessage.Marshal(b, m, deterministic)
}
func (dst *ChannelMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelMessage.Merge(dst, src)
}
func (m *ChannelMessage) XXX_Size() int {
	return xxx_messageInfo_ChannelMessage.Size(m)
}
func (m *ChannelMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelMessage proto.InternalMessageInfo

func (m *ChannelMessage) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *ChannelMessage) GetIdentity() string {
	if m != nil {
		return m.Identity
	}
	return ""
}

func (m *ChannelMessage) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *ChannelMessage) GetIsRx() bool {
	if m != nil {
		return m.IsRx
	}
	return false
}

func (m *ChannelMessage) GetContentType() int32 {
	if m != nil {
		return m.ContentType
	}
	return 0
}

func (m *ChannelMessage) GetSequence() int32 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *ChannelMessage) GetReplyFor() int32 {
	if m != nil {
		return m.ReplyFor
	}
	return 0
}

func (m *ChannelMessage) GetLength() int32 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *ChannelMessage) GetDecode() []byte {
	if m != nil {
		return m.Decode
	}
	return nil
}

type TogglePipeTracesRequest struct {
	Enable               bool                 `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	Verbosity            TraceToggleVerbosity `protobuf:"varint,2,opt,name=verbosity,proto3,enum=trace_pb.TraceToggleVerbosity" json:"verbosity,omitempty"`
	AppRegex             string               `protobuf:"bytes,3,opt,name=appRegex,proto3" json:"appRegex,omitempty"`
	PipeRegex            string               `protobuf:"bytes,4,opt,name=pipeRegex,proto3" json:"pipeRegex,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TogglePipeTracesRequest) Reset()         { *m = TogglePipeTracesRequest{} }
func (m *TogglePipeTracesRequest) String() string { return proto.CompactTextString(m) }
func (*TogglePipeTracesRequest) ProtoMessage()    {}
func (*TogglePipeTracesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_trace_4b7bed56b6035167, []int{2}
}
func (m *TogglePipeTracesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TogglePipeTracesRequest.Unmarshal(m, b)
}
func (m *TogglePipeTracesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TogglePipeTracesRequest.Marshal(b, m, deterministic)
}
func (dst *TogglePipeTracesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TogglePipeTracesRequest.Merge(dst, src)
}
func (m *TogglePipeTracesRequest) XXX_Size() int {
	return xxx_messageInfo_TogglePipeTracesRequest.Size(m)
}
func (m *TogglePipeTracesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TogglePipeTracesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TogglePipeTracesRequest proto.InternalMessageInfo

func (m *TogglePipeTracesRequest) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

func (m *TogglePipeTracesRequest) GetVerbosity() TraceToggleVerbosity {
	if m != nil {
		return m.Verbosity
	}
	return TraceToggleVerbosity_ReportNone
}

func (m *TogglePipeTracesRequest) GetAppRegex() string {
	if m != nil {
		return m.AppRegex
	}
	return ""
}

func (m *TogglePipeTracesRequest) GetPipeRegex() string {
	if m != nil {
		return m.PipeRegex
	}
	return ""
}

func init() {
	proto.RegisterType((*ChannelState)(nil), "trace_pb.ChannelState")
	proto.RegisterType((*ChannelMessage)(nil), "trace_pb.ChannelMessage")
	proto.RegisterType((*TogglePipeTracesRequest)(nil), "trace_pb.TogglePipeTracesRequest")
	proto.RegisterEnum("trace_pb.MessageType", MessageType_name, MessageType_value)
	proto.RegisterEnum("trace_pb.TraceToggleVerbosity", TraceToggleVerbosity_name, TraceToggleVerbosity_value)
}

func init() { proto.RegisterFile("trace.proto", fileDescriptor_trace_4b7bed56b6035167) }

var fileDescriptor_trace_4b7bed56b6035167 = []byte{
	// 409 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x93, 0xcf, 0xeb, 0xd3, 0x30,
	0x18, 0xc6, 0xed, 0xb6, 0xef, 0xd6, 0xbe, 0xfb, 0x41, 0x0d, 0x43, 0x83, 0x88, 0x8c, 0xe1, 0x41,
	0x76, 0xd8, 0x41, 0x8f, 0x7a, 0x19, 0x82, 0xb7, 0x89, 0xc4, 0xe1, 0xc1, 0x8b, 0xa4, 0xed, 0x4b,
	0x57, 0xe8, 0x9a, 0x98, 0x44, 0xd9, 0xae, 0xfe, 0x31, 0x82, 0xff, 0xa5, 0x49, 0x9a, 0xae, 0x1b,
	0x78, 0xf5, 0x96, 0xe7, 0xf3, 0xf4, 0x7d, 0xf3, 0xf0, 0xbe, 0x0d, 0x4c, 0x8d, 0xe2, 0x39, 0x6e,
	0xa5, 0x12, 0x46, 0x90, 0xd8, 0x8b, 0x6f, 0x32, 0x5b, 0xff, 0x8e, 0x60, 0xf6, 0xfe, 0xc8, 0x9b,
	0x06, 0xeb, 0xcf, 0x86, 0x1b, 0x24, 0xcf, 0x21, 0x31, 0xd5, 0x09, 0xb5, 0xe1, 0x27, 0x49, 0xa3,
	0x55, 0xf4, 0x6a, 0xc8, 0x7a, 0x40, 0x9e, 0x41, 0x5c, 0x15, 0xd8, 0x98, 0xca, 0x5c, 0xe8, 0xc0,
	0x9a, 0x09, 0xbb, 0x6a, 0x42, 0x61, 0x92, 0xb7, 0x9d, 0xe8, 0xd0, 0x5b, 0x9d, 0x74, 0x3d, 0x73,
	0x61, 0x4f, 0xb9, 0xc1, 0x82, 0x8e, 0xac, 0x17, 0xb3, 0x1e, 0x90, 0x97, 0x30, 0x57, 0x78, 0x12,
	0x06, 0x77, 0x45, 0xa1, 0x50, 0x6b, 0xfa, 0xe0, 0xab, 0xef, 0xe1, 0xfa, 0xd7, 0x00, 0x16, 0x21,
	0xe8, 0xde, 0x6a, 0x5e, 0xfe, 0x9f, 0xa8, 0x04, 0x46, 0x95, 0x66, 0xe7, 0x90, 0xd2, 0x9f, 0xc9,
	0x0a, 0xa6, 0x36, 0xad, 0xb1, 0xb5, 0x87, 0x8b, 0x44, 0x1f, 0xef, 0x81, 0xdd, 0x22, 0x77, 0x97,
	0xc6, 0xef, 0x3f, 0xb0, 0xc9, 0x91, 0x8e, 0xbd, 0x7d, 0xd5, 0xce, 0x53, 0x28, 0xeb, 0xcb, 0x07,
	0xa1, 0xe8, 0xa4, 0xf5, 0x3a, 0x4d, 0x9e, 0xc0, 0xb8, 0xc6, 0xa6, 0x34, 0x47, 0x1a, 0x7b, 0x27,
	0x28, 0xc7, 0x0b, 0xcc, 0x45, 0x81, 0x34, 0xb1, 0x7c, 0xc6, 0x82, 0x5a, 0xff, 0x89, 0xe0, 0xe9,
	0x41, 0x94, 0x65, 0x8d, 0x9f, 0x2a, 0x89, 0x07, 0xb7, 0x44, 0xcd, 0xdc, 0x45, 0xda, 0xb8, 0x1a,
	0x6c, 0x78, 0x56, 0xa3, 0x1f, 0x45, 0xcc, 0x82, 0x22, 0xef, 0x20, 0xf9, 0x89, 0x2a, 0x13, 0xba,
	0x1b, 0xc4, 0xe2, 0xf5, 0x8b, 0x6d, 0xb7, 0xff, 0xad, 0xef, 0xd1, 0xb6, 0xfc, 0xd2, 0x7d, 0xc5,
	0xfa, 0x02, 0x97, 0x9e, 0x4b, 0xc9, 0xb0, 0xc4, 0x73, 0x18, 0xd5, 0x55, 0xbb, 0xf9, 0x4b, 0x1b,
	0xa3, 0x35, 0x47, 0xde, 0xec, 0xc1, 0xe6, 0x2d, 0x4c, 0xc3, 0xa2, 0xfc, 0x88, 0x96, 0x90, 0xde,
	0xfe, 0x67, 0x8e, 0xa5, 0x8f, 0x6c, 0x68, 0x72, 0xbf, 0x54, 0xcf, 0xa3, 0xcd, 0x57, 0x58, 0xfe,
	0x2b, 0x19, 0x59, 0x00, 0x30, 0x94, 0x42, 0x99, 0x8f, 0xa2, 0x71, 0xf5, 0x8f, 0x61, 0xde, 0xea,
	0x3d, 0x37, 0xf9, 0x11, 0x75, 0x1a, 0x91, 0x14, 0x66, 0x01, 0x55, 0x5a, 0x5b, 0x32, 0x20, 0x73,
	0x48, 0x5a, 0xb2, 0xab, 0xeb, 0x74, 0x98, 0x8d, 0xfd, 0x1b, 0x78, 0xf3, 0x37, 0x00, 0x00, 0xff,
	0xff, 0xac, 0xf6, 0xc6, 0x21, 0x12, 0x03, 0x00, 0x00,
}
