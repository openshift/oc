// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// PerspectiveApplyConfiguration represents an declarative configuration of the Perspective type for use
// with apply.
type PerspectiveApplyConfiguration struct {
	ID         *string                                  `json:"id,omitempty"`
	Visibility *PerspectiveVisibilityApplyConfiguration `json:"visibility,omitempty"`
}

// PerspectiveApplyConfiguration constructs an declarative configuration of the Perspective type for use with
// apply.
func Perspective() *PerspectiveApplyConfiguration {
	return &PerspectiveApplyConfiguration{}
}

// WithID sets the ID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ID field is set to the value of the last call.
func (b *PerspectiveApplyConfiguration) WithID(value string) *PerspectiveApplyConfiguration {
	b.ID = &value
	return b
}

// WithVisibility sets the Visibility field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Visibility field is set to the value of the last call.
func (b *PerspectiveApplyConfiguration) WithVisibility(value *PerspectiveVisibilityApplyConfiguration) *PerspectiveApplyConfiguration {
	b.Visibility = value
	return b
}
