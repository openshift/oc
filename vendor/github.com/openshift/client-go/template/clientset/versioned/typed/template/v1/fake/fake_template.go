// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/openshift/api/template/v1"
	templatev1 "github.com/openshift/client-go/template/applyconfigurations/template/v1"
	typedtemplatev1 "github.com/openshift/client-go/template/clientset/versioned/typed/template/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeTemplates implements TemplateInterface
type fakeTemplates struct {
	*gentype.FakeClientWithListAndApply[*v1.Template, *v1.TemplateList, *templatev1.TemplateApplyConfiguration]
	Fake *FakeTemplateV1
}

func newFakeTemplates(fake *FakeTemplateV1, namespace string) typedtemplatev1.TemplateInterface {
	return &fakeTemplates{
		gentype.NewFakeClientWithListAndApply[*v1.Template, *v1.TemplateList, *templatev1.TemplateApplyConfiguration](
			fake.Fake,
			namespace,
			v1.SchemeGroupVersion.WithResource("templates"),
			v1.SchemeGroupVersion.WithKind("Template"),
			func() *v1.Template { return &v1.Template{} },
			func() *v1.TemplateList { return &v1.TemplateList{} },
			func(dst, src *v1.TemplateList) { dst.ListMeta = src.ListMeta },
			func(list *v1.TemplateList) []*v1.Template { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.TemplateList, items []*v1.Template) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}
