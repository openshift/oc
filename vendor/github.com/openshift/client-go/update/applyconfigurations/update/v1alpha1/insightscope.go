// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	updatev1alpha1 "github.com/openshift/api/update/v1alpha1"
)

// InsightScopeApplyConfiguration represents a declarative configuration of the InsightScope type for use
// with apply.
type InsightScopeApplyConfiguration struct {
	Type      *updatev1alpha1.ScopeType       `json:"type,omitempty"`
	Resources []ResourceRefApplyConfiguration `json:"resources,omitempty"`
}

// InsightScopeApplyConfiguration constructs a declarative configuration of the InsightScope type for use with
// apply.
func InsightScope() *InsightScopeApplyConfiguration {
	return &InsightScopeApplyConfiguration{}
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *InsightScopeApplyConfiguration) WithType(value updatev1alpha1.ScopeType) *InsightScopeApplyConfiguration {
	b.Type = &value
	return b
}

// WithResources adds the given value to the Resources field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Resources field.
func (b *InsightScopeApplyConfiguration) WithResources(values ...*ResourceRefApplyConfiguration) *InsightScopeApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithResources")
		}
		b.Resources = append(b.Resources, *values[i])
	}
	return b
}
