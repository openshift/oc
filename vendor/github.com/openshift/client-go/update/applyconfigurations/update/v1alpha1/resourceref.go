// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// ResourceRefApplyConfiguration represents a declarative configuration of the ResourceRef type for use
// with apply.
type ResourceRefApplyConfiguration struct {
	Group     *string `json:"group,omitempty"`
	Resource  *string `json:"resource,omitempty"`
	Name      *string `json:"name,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
}

// ResourceRefApplyConfiguration constructs a declarative configuration of the ResourceRef type for use with
// apply.
func ResourceRef() *ResourceRefApplyConfiguration {
	return &ResourceRefApplyConfiguration{}
}

// WithGroup sets the Group field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Group field is set to the value of the last call.
func (b *ResourceRefApplyConfiguration) WithGroup(value string) *ResourceRefApplyConfiguration {
	b.Group = &value
	return b
}

// WithResource sets the Resource field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Resource field is set to the value of the last call.
func (b *ResourceRefApplyConfiguration) WithResource(value string) *ResourceRefApplyConfiguration {
	b.Resource = &value
	return b
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *ResourceRefApplyConfiguration) WithName(value string) *ResourceRefApplyConfiguration {
	b.Name = &value
	return b
}

// WithNamespace sets the Namespace field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Namespace field is set to the value of the last call.
func (b *ResourceRefApplyConfiguration) WithNamespace(value string) *ResourceRefApplyConfiguration {
	b.Namespace = &value
	return b
}
