// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/client-go/applyconfigurations/meta/v1"
)

// ClusterOperatorStatusInsightApplyConfiguration represents a declarative configuration of the ClusterOperatorStatusInsight type for use
// with apply.
type ClusterOperatorStatusInsightApplyConfiguration struct {
	Conditions []v1.ConditionApplyConfiguration `json:"conditions,omitempty"`
	Name       *string                          `json:"name,omitempty"`
	Resource   *ResourceRefApplyConfiguration   `json:"resource,omitempty"`
}

// ClusterOperatorStatusInsightApplyConfiguration constructs a declarative configuration of the ClusterOperatorStatusInsight type for use with
// apply.
func ClusterOperatorStatusInsight() *ClusterOperatorStatusInsightApplyConfiguration {
	return &ClusterOperatorStatusInsightApplyConfiguration{}
}

// WithConditions adds the given value to the Conditions field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Conditions field.
func (b *ClusterOperatorStatusInsightApplyConfiguration) WithConditions(values ...*v1.ConditionApplyConfiguration) *ClusterOperatorStatusInsightApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithConditions")
		}
		b.Conditions = append(b.Conditions, *values[i])
	}
	return b
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *ClusterOperatorStatusInsightApplyConfiguration) WithName(value string) *ClusterOperatorStatusInsightApplyConfiguration {
	b.Name = &value
	return b
}

// WithResource sets the Resource field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Resource field is set to the value of the last call.
func (b *ClusterOperatorStatusInsightApplyConfiguration) WithResource(value *ResourceRefApplyConfiguration) *ClusterOperatorStatusInsightApplyConfiguration {
	b.Resource = value
	return b
}
