// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// VersionApplyConfiguration represents a declarative configuration of the Version type for use
// with apply.
type VersionApplyConfiguration struct {
	Version  *string                             `json:"version,omitempty"`
	Metadata []VersionMetadataApplyConfiguration `json:"metadata,omitempty"`
}

// VersionApplyConfiguration constructs a declarative configuration of the Version type for use with
// apply.
func Version() *VersionApplyConfiguration {
	return &VersionApplyConfiguration{}
}

// WithVersion sets the Version field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Version field is set to the value of the last call.
func (b *VersionApplyConfiguration) WithVersion(value string) *VersionApplyConfiguration {
	b.Version = &value
	return b
}

// WithMetadata adds the given value to the Metadata field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Metadata field.
func (b *VersionApplyConfiguration) WithMetadata(values ...*VersionMetadataApplyConfiguration) *VersionApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithMetadata")
		}
		b.Metadata = append(b.Metadata, *values[i])
	}
	return b
}
