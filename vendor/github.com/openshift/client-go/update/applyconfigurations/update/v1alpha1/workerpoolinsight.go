// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	updatev1alpha1 "github.com/openshift/api/update/v1alpha1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// WorkerPoolInsightApplyConfiguration represents a declarative configuration of the WorkerPoolInsight type for use
// with apply.
type WorkerPoolInsightApplyConfiguration struct {
	UID                                      *string  `json:"uid,omitempty"`
	AcquiredAt                               *v1.Time `json:"acquiredAt,omitempty"`
	WorkerPoolInsightUnionApplyConfiguration `json:",inline"`
}

// WorkerPoolInsightApplyConfiguration constructs a declarative configuration of the WorkerPoolInsight type for use with
// apply.
func WorkerPoolInsight() *WorkerPoolInsightApplyConfiguration {
	return &WorkerPoolInsightApplyConfiguration{}
}

// WithUID sets the UID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UID field is set to the value of the last call.
func (b *WorkerPoolInsightApplyConfiguration) WithUID(value string) *WorkerPoolInsightApplyConfiguration {
	b.UID = &value
	return b
}

// WithAcquiredAt sets the AcquiredAt field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the AcquiredAt field is set to the value of the last call.
func (b *WorkerPoolInsightApplyConfiguration) WithAcquiredAt(value v1.Time) *WorkerPoolInsightApplyConfiguration {
	b.AcquiredAt = &value
	return b
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *WorkerPoolInsightApplyConfiguration) WithType(value updatev1alpha1.InsightType) *WorkerPoolInsightApplyConfiguration {
	b.WorkerPoolInsightUnionApplyConfiguration.Type = &value
	return b
}

// WithMachineConfigPoolStatusInsight sets the MachineConfigPoolStatusInsight field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MachineConfigPoolStatusInsight field is set to the value of the last call.
func (b *WorkerPoolInsightApplyConfiguration) WithMachineConfigPoolStatusInsight(value *MachineConfigPoolStatusInsightApplyConfiguration) *WorkerPoolInsightApplyConfiguration {
	b.WorkerPoolInsightUnionApplyConfiguration.MachineConfigPoolStatusInsight = value
	return b
}

// WithNodeStatusInsight sets the NodeStatusInsight field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the NodeStatusInsight field is set to the value of the last call.
func (b *WorkerPoolInsightApplyConfiguration) WithNodeStatusInsight(value *NodeStatusInsightApplyConfiguration) *WorkerPoolInsightApplyConfiguration {
	b.WorkerPoolInsightUnionApplyConfiguration.NodeStatusInsight = value
	return b
}

// WithHealthInsight sets the HealthInsight field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the HealthInsight field is set to the value of the last call.
func (b *WorkerPoolInsightApplyConfiguration) WithHealthInsight(value *HealthInsightApplyConfiguration) *WorkerPoolInsightApplyConfiguration {
	b.WorkerPoolInsightUnionApplyConfiguration.HealthInsight = value
	return b
}
