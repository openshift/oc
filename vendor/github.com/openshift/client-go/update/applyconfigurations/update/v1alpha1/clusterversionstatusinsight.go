// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	updatev1alpha1 "github.com/openshift/api/update/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	v1 "k8s.io/client-go/applyconfigurations/meta/v1"
)

// ClusterVersionStatusInsightApplyConfiguration represents a declarative configuration of the ClusterVersionStatusInsight type for use
// with apply.
type ClusterVersionStatusInsightApplyConfiguration struct {
	Conditions           []v1.ConditionApplyConfiguration              `json:"conditions,omitempty"`
	Resource             *ResourceRefApplyConfiguration                `json:"resource,omitempty"`
	Assessment           *updatev1alpha1.ControlPlaneAssessment        `json:"assessment,omitempty"`
	Versions             *ControlPlaneUpdateVersionsApplyConfiguration `json:"versions,omitempty"`
	Completion           *int32                                        `json:"completion,omitempty"`
	StartedAt            *metav1.Time                                  `json:"startedAt,omitempty"`
	CompletedAt          *metav1.Time                                  `json:"completedAt,omitempty"`
	EstimatedCompletedAt *metav1.Time                                  `json:"estimatedCompletedAt,omitempty"`
}

// ClusterVersionStatusInsightApplyConfiguration constructs a declarative configuration of the ClusterVersionStatusInsight type for use with
// apply.
func ClusterVersionStatusInsight() *ClusterVersionStatusInsightApplyConfiguration {
	return &ClusterVersionStatusInsightApplyConfiguration{}
}

// WithConditions adds the given value to the Conditions field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Conditions field.
func (b *ClusterVersionStatusInsightApplyConfiguration) WithConditions(values ...*v1.ConditionApplyConfiguration) *ClusterVersionStatusInsightApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithConditions")
		}
		b.Conditions = append(b.Conditions, *values[i])
	}
	return b
}

// WithResource sets the Resource field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Resource field is set to the value of the last call.
func (b *ClusterVersionStatusInsightApplyConfiguration) WithResource(value *ResourceRefApplyConfiguration) *ClusterVersionStatusInsightApplyConfiguration {
	b.Resource = value
	return b
}

// WithAssessment sets the Assessment field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Assessment field is set to the value of the last call.
func (b *ClusterVersionStatusInsightApplyConfiguration) WithAssessment(value updatev1alpha1.ControlPlaneAssessment) *ClusterVersionStatusInsightApplyConfiguration {
	b.Assessment = &value
	return b
}

// WithVersions sets the Versions field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Versions field is set to the value of the last call.
func (b *ClusterVersionStatusInsightApplyConfiguration) WithVersions(value *ControlPlaneUpdateVersionsApplyConfiguration) *ClusterVersionStatusInsightApplyConfiguration {
	b.Versions = value
	return b
}

// WithCompletion sets the Completion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Completion field is set to the value of the last call.
func (b *ClusterVersionStatusInsightApplyConfiguration) WithCompletion(value int32) *ClusterVersionStatusInsightApplyConfiguration {
	b.Completion = &value
	return b
}

// WithStartedAt sets the StartedAt field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the StartedAt field is set to the value of the last call.
func (b *ClusterVersionStatusInsightApplyConfiguration) WithStartedAt(value metav1.Time) *ClusterVersionStatusInsightApplyConfiguration {
	b.StartedAt = &value
	return b
}

// WithCompletedAt sets the CompletedAt field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CompletedAt field is set to the value of the last call.
func (b *ClusterVersionStatusInsightApplyConfiguration) WithCompletedAt(value metav1.Time) *ClusterVersionStatusInsightApplyConfiguration {
	b.CompletedAt = &value
	return b
}

// WithEstimatedCompletedAt sets the EstimatedCompletedAt field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the EstimatedCompletedAt field is set to the value of the last call.
func (b *ClusterVersionStatusInsightApplyConfiguration) WithEstimatedCompletedAt(value metav1.Time) *ClusterVersionStatusInsightApplyConfiguration {
	b.EstimatedCompletedAt = &value
	return b
}
