// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	updatev1alpha1 "github.com/openshift/api/update/v1alpha1"
)

// ControlPlaneInsightUnionApplyConfiguration represents a declarative configuration of the ControlPlaneInsightUnion type for use
// with apply.
type ControlPlaneInsightUnionApplyConfiguration struct {
	Type                           *updatev1alpha1.InsightType                       `json:"type,omitempty"`
	ClusterVersionStatusInsight    *ClusterVersionStatusInsightApplyConfiguration    `json:"clusterVersion,omitempty"`
	ClusterOperatorStatusInsight   *ClusterOperatorStatusInsightApplyConfiguration   `json:"clusterOperator,omitempty"`
	MachineConfigPoolStatusInsight *MachineConfigPoolStatusInsightApplyConfiguration `json:"machineConfigPool,omitempty"`
	NodeStatusInsight              *NodeStatusInsightApplyConfiguration              `json:"node,omitempty"`
	HealthInsight                  *HealthInsightApplyConfiguration                  `json:"health,omitempty"`
}

// ControlPlaneInsightUnionApplyConfiguration constructs a declarative configuration of the ControlPlaneInsightUnion type for use with
// apply.
func ControlPlaneInsightUnion() *ControlPlaneInsightUnionApplyConfiguration {
	return &ControlPlaneInsightUnionApplyConfiguration{}
}

// WithType sets the Type field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Type field is set to the value of the last call.
func (b *ControlPlaneInsightUnionApplyConfiguration) WithType(value updatev1alpha1.InsightType) *ControlPlaneInsightUnionApplyConfiguration {
	b.Type = &value
	return b
}

// WithClusterVersionStatusInsight sets the ClusterVersionStatusInsight field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClusterVersionStatusInsight field is set to the value of the last call.
func (b *ControlPlaneInsightUnionApplyConfiguration) WithClusterVersionStatusInsight(value *ClusterVersionStatusInsightApplyConfiguration) *ControlPlaneInsightUnionApplyConfiguration {
	b.ClusterVersionStatusInsight = value
	return b
}

// WithClusterOperatorStatusInsight sets the ClusterOperatorStatusInsight field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ClusterOperatorStatusInsight field is set to the value of the last call.
func (b *ControlPlaneInsightUnionApplyConfiguration) WithClusterOperatorStatusInsight(value *ClusterOperatorStatusInsightApplyConfiguration) *ControlPlaneInsightUnionApplyConfiguration {
	b.ClusterOperatorStatusInsight = value
	return b
}

// WithMachineConfigPoolStatusInsight sets the MachineConfigPoolStatusInsight field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MachineConfigPoolStatusInsight field is set to the value of the last call.
func (b *ControlPlaneInsightUnionApplyConfiguration) WithMachineConfigPoolStatusInsight(value *MachineConfigPoolStatusInsightApplyConfiguration) *ControlPlaneInsightUnionApplyConfiguration {
	b.MachineConfigPoolStatusInsight = value
	return b
}

// WithNodeStatusInsight sets the NodeStatusInsight field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the NodeStatusInsight field is set to the value of the last call.
func (b *ControlPlaneInsightUnionApplyConfiguration) WithNodeStatusInsight(value *NodeStatusInsightApplyConfiguration) *ControlPlaneInsightUnionApplyConfiguration {
	b.NodeStatusInsight = value
	return b
}

// WithHealthInsight sets the HealthInsight field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the HealthInsight field is set to the value of the last call.
func (b *ControlPlaneInsightUnionApplyConfiguration) WithHealthInsight(value *HealthInsightApplyConfiguration) *ControlPlaneInsightUnionApplyConfiguration {
	b.HealthInsight = value
	return b
}
