// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/openshift/api/oauth/v1"
	oauthv1 "github.com/openshift/client-go/oauth/applyconfigurations/oauth/v1"
	typedoauthv1 "github.com/openshift/client-go/oauth/clientset/versioned/typed/oauth/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeOAuthClients implements OAuthClientInterface
type fakeOAuthClients struct {
	*gentype.FakeClientWithListAndApply[*v1.OAuthClient, *v1.OAuthClientList, *oauthv1.OAuthClientApplyConfiguration]
	Fake *FakeOauthV1
}

func newFakeOAuthClients(fake *FakeOauthV1) typedoauthv1.OAuthClientInterface {
	return &fakeOAuthClients{
		gentype.NewFakeClientWithListAndApply[*v1.OAuthClient, *v1.OAuthClientList, *oauthv1.OAuthClientApplyConfiguration](
			fake.Fake,
			"",
			v1.SchemeGroupVersion.WithResource("oauthclients"),
			v1.SchemeGroupVersion.WithKind("OAuthClient"),
			func() *v1.OAuthClient { return &v1.OAuthClient{} },
			func() *v1.OAuthClientList { return &v1.OAuthClientList{} },
			func(dst, src *v1.OAuthClientList) { dst.ListMeta = src.ListMeta },
			func(list *v1.OAuthClientList) []*v1.OAuthClient { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.OAuthClientList, items []*v1.OAuthClient) { list.Items = gentype.FromPointerSlice(items) },
		),
		fake,
	}
}
