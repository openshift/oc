// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1 "github.com/openshift/api/oauth/v1"
	oauthv1 "github.com/openshift/client-go/oauth/applyconfigurations/oauth/v1"
	typedoauthv1 "github.com/openshift/client-go/oauth/clientset/versioned/typed/oauth/v1"
	gentype "k8s.io/client-go/gentype"
)

// fakeOAuthClientAuthorizations implements OAuthClientAuthorizationInterface
type fakeOAuthClientAuthorizations struct {
	*gentype.FakeClientWithListAndApply[*v1.OAuthClientAuthorization, *v1.OAuthClientAuthorizationList, *oauthv1.OAuthClientAuthorizationApplyConfiguration]
	Fake *FakeOauthV1
}

func newFakeOAuthClientAuthorizations(fake *FakeOauthV1) typedoauthv1.OAuthClientAuthorizationInterface {
	return &fakeOAuthClientAuthorizations{
		gentype.NewFakeClientWithListAndApply[*v1.OAuthClientAuthorization, *v1.OAuthClientAuthorizationList, *oauthv1.OAuthClientAuthorizationApplyConfiguration](
			fake.Fake,
			"",
			v1.SchemeGroupVersion.WithResource("oauthclientauthorizations"),
			v1.SchemeGroupVersion.WithKind("OAuthClientAuthorization"),
			func() *v1.OAuthClientAuthorization { return &v1.OAuthClientAuthorization{} },
			func() *v1.OAuthClientAuthorizationList { return &v1.OAuthClientAuthorizationList{} },
			func(dst, src *v1.OAuthClientAuthorizationList) { dst.ListMeta = src.ListMeta },
			func(list *v1.OAuthClientAuthorizationList) []*v1.OAuthClientAuthorization {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1.OAuthClientAuthorizationList, items []*v1.OAuthClientAuthorization) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
